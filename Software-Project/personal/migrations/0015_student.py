# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-11-05 04:05
from __future__ import unicode_literals

import datetime
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('personal', '0014_delete_student'),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('First_Name', models.CharField(max_length=80, verbose_name='*First Name')),
                ('Last_Name', models.CharField(max_length=80, verbose_name='*Last Name')),
                ('Student_Id', models.IntegerField(verbose_name='*Student ID')),
                ('Gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('D', 'Do Not Wish to Provide')], error_messages={'required': 'Please select a Gender type'}, max_length=25, verbose_name='*Gender')),
                ('Race', models.CharField(choices=[('None', 'None'), ('AI_AN', 'American Indian or Alaskan Native'), ('B_AA', 'Black or African-American'), ('NH_OPI', 'Native Hawaiian or other Pacific Islander'), ('A', 'Asian'), ('W', 'White'), ('O', 'Other'), ('DN', 'Do Not Wish to Provide')], max_length=25, verbose_name='*Race')),
                ('Address_Line_1', models.CharField(max_length=200, verbose_name='*Address1')),
                ('Address_Line_2', models.CharField(max_length=200, verbose_name='Address2')),
                ('City', models.CharField(max_length=80, verbose_name='*City')),
                ('State', models.CharField(choices=[('NN', ''), ('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], error_messages={'required': 'Please select a State'}, max_length=25, verbose_name='*State')),
                ('Zip', models.CharField(max_length=5, verbose_name='*Zip')),
                ('Country', models.CharField(default='United States', max_length=80, verbose_name='*Country')),
                ('Phone', models.IntegerField(verbose_name='*Phone')),
                ('Email', models.EmailField(max_length=254, verbose_name='*Email')),
                ('SAddress_Line_1', models.CharField(max_length=200, verbose_name='*Summer Address1')),
                ('SAddress_Line_2', models.CharField(max_length=200, verbose_name='Summer Address2')),
                ('SCity', models.CharField(max_length=80, verbose_name='*Summer City')),
                ('SState', models.CharField(choices=[('NN', ''), ('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], error_messages={'required': 'Please select a State'}, max_length=25, verbose_name='*Summer State')),
                ('SZip', models.CharField(max_length=5, verbose_name='*Summer Zip')),
                ('SCountry', models.CharField(default='United States', max_length=80, verbose_name='*Summer Country')),
                ('SPhone', models.IntegerField(verbose_name='*Summer Phone')),
                ('SEmail', models.EmailField(max_length=254, verbose_name='*Summer Email')),
                ('Primary_Major', models.CharField(choices=[('None', 'None'), ('Aerospace', 'Aerospace Engineering'), ('Applied Mathematics', 'Applied Mathematics'), ('Architectural', 'Architectural Engineering'), ('Chemical', 'Chemical Engineering'), ('Biological', 'Biological Engineering'), ('Civil', 'Civil Engineering'), ('Computer Science', 'Computer Science'), ('Electrical', 'Electrical Engineering'), ('Electrical and Computer', 'Electrical and Computer Engineering'), ('Engineering Physics', 'Engineering Physics'), ('Environmental', 'Environmental Engineering'), ('Mechanical', 'Mechanical Engineering'), ('Technology Arts and Media', 'Technology Arts and Media')], max_length=50, verbose_name='*Primary Major')),
                ('GPA', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(4.0)], verbose_name='*GPA (Should be between 0 to 4)')),
                ('Secondary_Major', models.CharField(choices=[('None', 'None'), ('Aerospace', 'Aerospace Engineering'), ('Applied Mathematics', 'Applied Mathematics'), ('Architectural', 'Architectural Engineering'), ('Chemical', 'Chemical Engineering'), ('Biological', 'Biological Engineering'), ('Civil', 'Civil Engineering'), ('Computer Science', 'Computer Science'), ('Electrical', 'Electrical Engineering'), ('Electrical and Computer', 'Electrical and Computer Engineering'), ('Engineering Physics', 'Engineering Physics'), ('Environmental', 'Environmental Engineering'), ('Mechanical', 'Mechanical Engineering'), ('Technology Arts and Media', 'Technology Arts and Media')], max_length=50, verbose_name='Secondary Major')),
                ('Level', models.CharField(choices=[('F', 'Freshman'), ('SO', 'Sophomore'), ('J', 'Junior'), ('SE', 'Senior'), ('FSE', '5th Year Senior')], max_length=50, verbose_name='*Level in school as of next fall')),
                ('Anticipated_Graduation', models.DateField(default=datetime.datetime.now, verbose_name='*Anticipated Graduation Date')),
                ('Previous_Research', models.CharField(choices=[('1', 'True'), ('0', 'False')], max_length=20, verbose_name='Do you have previous research experience?')),
                ('Applied_Before', models.CharField(choices=[('1', 'True'), ('0', 'False')], max_length=20, verbose_name='*Have you applied for Discovery Learning Apprenticeship before?')),
                ('First_Preference', models.CharField(choices=[('0', None), (b'14', '14:APPM - Machine Learning for earthquake prediction'), (b'15', '15:Merton\u2019s Problem with Human Capital Investment'), (b'16', '16:Autonomous Robotic Planetary Exploration Simulator'), (b'17', '17:GPS/GNSS Receiver Design/Development for Space Applications'), (b'18', '18:Throw Away Accounts'), (b'19', '19:Social norms in online communities')], max_length=200, verbose_name='*First Preference')),
                ('Two_Preference', models.CharField(choices=[('0', None), (b'14', '14:APPM - Machine Learning for earthquake prediction'), (b'15', '15:Merton\u2019s Problem with Human Capital Investment'), (b'16', '16:Autonomous Robotic Planetary Exploration Simulator'), (b'17', '17:GPS/GNSS Receiver Design/Development for Space Applications'), (b'18', '18:Throw Away Accounts'), (b'19', '19:Social norms in online communities')], max_length=200, verbose_name='Two Preference')),
                ('Three_Preference', models.CharField(choices=[('0', None), (b'14', '14:APPM - Machine Learning for earthquake prediction'), (b'15', '15:Merton\u2019s Problem with Human Capital Investment'), (b'16', '16:Autonomous Robotic Planetary Exploration Simulator'), (b'17', '17:GPS/GNSS Receiver Design/Development for Space Applications'), (b'18', '18:Throw Away Accounts'), (b'19', '19:Social norms in online communities')], max_length=200, verbose_name='Three Preference')),
                ('Four_Preference', models.CharField(choices=[('0', None), (b'14', '14:APPM - Machine Learning for earthquake prediction'), (b'15', '15:Merton\u2019s Problem with Human Capital Investment'), (b'16', '16:Autonomous Robotic Planetary Exploration Simulator'), (b'17', '17:GPS/GNSS Receiver Design/Development for Space Applications'), (b'18', '18:Throw Away Accounts'), (b'19', '19:Social norms in online communities')], max_length=200, verbose_name='Four Preference')),
                ('Five_Preference', models.CharField(choices=[('0', None), (b'14', '14:APPM - Machine Learning for earthquake prediction'), (b'15', '15:Merton\u2019s Problem with Human Capital Investment'), (b'16', '16:Autonomous Robotic Planetary Exploration Simulator'), (b'17', '17:GPS/GNSS Receiver Design/Development for Space Applications'), (b'18', '18:Throw Away Accounts'), (b'19', '19:Social norms in online communities')], max_length=200, verbose_name='Five Preference')),
                ('Background_check', models.CharField(choices=[('1', 'True'), ('0', 'False'), ('2', 'Not Sure')], max_length=50)),
                ('Discrimination_training', models.CharField(choices=[('1', 'True'), ('0', 'False'), ('2', 'Not Sure')], max_length=50)),
                ('SSN', models.IntegerField(verbose_name='*Last four digits of your Social Security Number: (this will only be used to acess your background check information)')),
                ('Skills', models.CharField(max_length=300, verbose_name='Please list the three skills or qualifications that you feel make you a great candidate for the positions you selected. (Could be knowledge of a programming language, knowledge of a field, courses taken, personal characteristics, etc. If appropriate, note your match to requirements in job description. Please note responses are limited to 75 characters.)')),
                ('Skills_1', models.CharField(max_length=100, verbose_name='1. ')),
                ('Skills_2', models.CharField(max_length=100, verbose_name='2. ')),
                ('Skills_3', models.CharField(max_length=100, verbose_name='3. ')),
                ('Upload', models.CharField(max_length=100)),
            ],
        ),
    ]
